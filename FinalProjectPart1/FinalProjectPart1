# Alyza Vergel De Dios
# ID 2222332
import datetime


def parse_items(f):  # parse items in csv files
    parsed = []
    for ii in f:
        parsed.append(ii.strip().split(','))
    return parsed


def counter(tok):  # counts which words are valid for type and manufacturer
    type_c = 0
    manuf_c = 0
    for items in valid_thngs:
        if tok == items[1]:
            type_c += 1
        elif tok == items[2]:
            manuf_c += 1
    return type_c, manuf_c


def checker(val):  # checks if type and manufacturer are valid
    if len(val) > 2:
        raise ValueError
    else:
        types = 0
        manufs = 0
        for v in val:
            for itemv in valid_thngs:
                if v == itemv[2]:
                    types += 1
                    break
                elif v == itemv[1]:
                    manufs += 1
                    break
        if (types > 1) or (manufs > 1):
            raise ValueError
        elif (types < 1) or (manufs < 1):
            raise ValueError
        else:
            return stuff


manufacturers = open('ManufacturerList.csv', 'r')
prices = open('PriceList.csv', 'r')
servdates = open('ServiceDatesList.csv', 'r')
parsed_man = parse_items(manufacturers)
parsed_price = parse_items(prices)
parsed_date = parse_items(servdates)

thngs = []  # list of all items based on item_id
for manuf in parsed_man:
    thngs.append(manuf)
    for price in parsed_price:  # inserting item prices
        if manuf[0] == price[0]:
            manuf.insert(3, price[1])
    for dates in parsed_date:  # inserting item dates
        if manuf[0] == dates[0]:
            manuf.insert(4, dates[1])

today = datetime.datetime.now()
brok_thngs = []  # list of damaged items and past service date
for things in thngs:
    things[4] = datetime.datetime.strptime(things[4], '%m/%d/%Y')
    if things[4] < today:
        brok_thngs.append(things)
    if things[-1] == 'damaged':
        brok_thngs.append(things)

valid_thngs = [x for x in thngs if x not in brok_thngs]  # list of valid items (not damaged/past date)
for x in valid_thngs:
    x[4] = x[4].strftime('%#m/%#d/%Y')

user_input = input('Enter item and manufacturer\n')
while user_input != 'q':
    try:
        tokens = user_input.strip().split()
        acceptable = []  # list of input
        for t in tokens:
            check = counter(t)
            if check[0] > 0:
                acceptable.append(t)
            elif check[1] > 0:
                acceptable.append(t)
        stuff = checker(acceptable)

        there = False
        chosen = []  # list of items that match input
        for item in valid_thngs:
            if set(stuff).issubset(item):  # checks if valid type and manufacturer is in item
                there = True
                chosen.append(item)
        if not there:
            raise ValueError
        else:
            print('Your item is:', end=' ')
            highest = chosen[0]             # checks which
            for x in chosen:                # item in the list
                if x[3] > highest[3]:       # is the most
                    highest = x             # expensive
            for h in highest:               # and prints the
                print(h, end=' ')           # item
        consider_other = []  # list of items that match the type input
        for i in acceptable:
            for j in valid_thngs:
                if j[2] == i:
                    consider_other.append(j)
        dif = [x for x in consider_other if x not in chosen]  # list of items with diff manufacturer but same type
        if len(dif) > 0:                                    # if there is item
            print('\nYou may, also, consider:', end=' ')    # with same type
            for c in dif:                                   # but diff manufacturer,
                for a in c:                                 # print these items
                    print(a, end=' ')

        user_input = input('\nEnter item and manufacturer\n')

    except (TypeError, ValueError):
        print('no such item in inventory')
        user_input = input('\nEnter item and manufacturer\n')
